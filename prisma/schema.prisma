// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator kysely {
  provider     = "prisma-kysely"
  output       = "../src/server/db"
  fileName     = "types.ts"
  enumFileName = "enums.ts"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum account_type {
  CREATOR
  EDITOR
}

model user {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  first_name String
  last_name  String?
  email      String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  account    account[]
}

model account {
  id           String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at   DateTime     @default(now())
  updated_at   DateTime     @updatedAt
  type         account_type
  user         user         @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id      String       @db.Uuid
  organization workspace    @relation(fields: [workspace_id], references: [id], onDelete: Cascade)
  workspace_id String       @db.Uuid
}

model workspace {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String        @db.VarChar(100)
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  member      account[]
  youtube     youtube?
  oauth_state oauth_state[]
}

model youtube {
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  refresh_token String
  access_token  String
  workspace     workspace @relation(fields: [workspace_id], references: [id])
  workspace_id  String    @unique @db.Uuid
}

model oauth_state {
  id           BigInt    @id @default(autoincrement())
  created_at   DateTime  @default(now())
  state        String
  workspace    workspace @relation(fields: [workspace_id], references: [id])
  workspace_id String    @db.Uuid
}
